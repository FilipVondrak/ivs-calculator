<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ivs_calc_proj.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:controls="clr-namespace:ivs_calc_proj.Controls"
        xmlns:mathLib="clr-namespace:math_lib;assembly=math_lib"
        xmlns:views="clr-namespace:ivs_calc_proj.Views"
        mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="750"
        MinWidth="420" MinHeight="600" Width="420" Height="600"
        x:Class="ivs_calc_proj.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        WindowStartupLocation="CenterScreen"
        ExtendClientAreaToDecorationsHint="True"

        ExtendClientAreaTitleBarHeightHint="-1"
        Loaded="Control_OnLoaded"
        Padding="{Binding $self.OffScreenMargin}"

        Title="ivs_calc_proj">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Window.Styles>
        <Style Selector=":is(Button)">
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Background" Duration="0:0:0.4"/>
                </Transitions>
            </Setter>
        </Style>
        <Style Selector=":is(Border)">
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Background" Duration="0:0:0.4"/>
                </Transitions>
            </Setter>
        </Style>
        <Style Selector=":is(Grid)">
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Background" Duration="0:0:0.4"/>
                </Transitions>
            </Setter>
        </Style>
        <Style Selector=":is(TextBlock)">
            <Setter Property="Transitions">
                <Transitions>
                    <BrushTransition Property="Foreground" Duration="0:0:0.4"/>
                </Transitions>
            </Setter>
        </Style>
    </Window.Styles>

    <Grid Background="{DynamicResource Background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <UniformGrid Grid.Row="0" ZIndex="2" Rows="0" Columns="2" Margin="0 0 0 0">
            <UniformGrid.Styles>
                <Style Selector="Border">
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                </Style>
                <Style Selector="TextBlock">
                    <Setter Property="TextAlignment" Value="Center"/>
                </Style>
            </UniformGrid.Styles>
            <Border><ToggleButton Content="Dark theme" IsCheckedChanged="ToggleButton_OnIsCheckedChanged" Height="30"/></Border>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Border HorizontalAlignment="Right"><Button Command="{Binding SwitchToCalculatorCommand}"><TextBlock>CALCULATOR</TextBlock></Button></Border>
                <Border HorizontalAlignment="Right"><Button><TextBlock>HISTORY</TextBlock></Button></Border>
                <Border HorizontalAlignment="Right"><Button Command="{Binding SwitchToHelpCommand}"><TextBlock>HELP</TextBlock></Button></Border>
            </StackPanel>
        </UniformGrid>


        <TransitioningContentControl x:Name="ContentControl" Grid.Row="1" Margin="0 -30 0 0" Content="{Binding CurrentContent}">
            <!--<controls:Calculator x:Name="Calc"/>-->
            <!--<controls:HelpMenu/>-->
        </TransitioningContentControl>
    </Grid>

</Window>
