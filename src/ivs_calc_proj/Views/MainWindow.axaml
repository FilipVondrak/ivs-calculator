<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ivs_calc_proj.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="500" d:DesignHeight="750"
        MinWidth="420" MinHeight="300" Width="500" Height="750"
        x:Class="ivs_calc_proj.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        WindowStartupLocation="CenterScreen"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="NoChrome"
        ExtendClientAreaTitleBarHeightHint="-1"
        Padding="{Binding $self.OffScreenMargin}"
        Title="ivs_calc_proj">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel/>
    </Design.DataContext>

    <Grid Background="{DynamicResource Background}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="3*"/>
        </Grid.RowDefinitions>
        
        <Grid IsHitTestVisible="True" ZIndex="2" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock VerticalAlignment="Center" Text="IVS - Stary medved"  Margin="10 0 0 0" Foreground="Black" Name="TitleBarTitle"/>
            
            <StackPanel Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 2.5 0" Spacing="2" Name="TitleBarButtons">
                <StackPanel.Styles>
                    <Style Selector="Button">
                        <Setter Property="Width" Value="25"/>
                        <Setter Property="Height" Value="25"/>
                        <Setter Property="Background" Value="DarkGray"/>
                        <Setter Property="CornerRadius" Value="25"/>
                        <Setter Property="IsHitTestVisible" Value="True"/>
                    </Style>
                </StackPanel.Styles>
                
                <Button Click="MinimizeApp"/> 
                <Button Click="MaximizeApp"/>
                <Button Click="CloseApp" HotKey="Escape">
                    <Button.Styles>
                        <Style Selector="Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                            <Setter Property="Background" Value="IndianRed"/>
                        </Style>
                    </Button.Styles>
                </Button>
                
            </StackPanel>
        </Grid>

        <!-- display -->
        <Border Grid.Row="0" Grid.RowSpan="2" Background="{DynamicResource Primary}" ZIndex="1" IsHitTestVisible="False" CornerRadius="0 0 25 25" Padding="0 30 0 0" Name="DisplayBorder">
            <RelativePanel>

                <TextBlock x:Name="Display" Grid.Row="1" Text="{Binding Expression}"
                           RelativePanel.AlignVerticalCenterWithPanel="True"
                           RelativePanel.AlignHorizontalCenterWithPanel="True"
                           FontSize="20"
                           Foreground="{DynamicResource TextPrimary}"
                />

                <TextBlock Grid.Row="0" Text="{Binding Output}"
                           RelativePanel.Below="Display"
                           RelativePanel.AlignRightWith="Display"
                           Margin="0 0 0 0"
                           FontSize="20"
                           Foreground="{DynamicResource TextSecondary}"
                           IsVisible="{Binding OutputVisible}"
                />
            </RelativePanel>
        </Border>

        <!-- keyboard -->
        <Grid Grid.Row="2" Margin="25">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/> 
                <ColumnDefinition Width="*"/> 
                <ColumnDefinition Width="*"/> 
                <ColumnDefinition Width="*"/> 
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Styles>
                <Style Selector="Button">
                    <Setter Property="Margin" Value="3"/>
                    <Setter Property="CornerRadius" Value="25"/>
                    <Setter Property="VerticalAlignment" Value="Stretch"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="Background" Value="{DynamicResource Primary}"/>
                </Style>
                <Style Selector="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="FontSize" Value="24"/>
                    <Setter Property="Foreground" Value="{DynamicResource TextPrimary}"/>
                </Style>
            </Grid.Styles>
            
            <Button Grid.Column="0" Grid.Row="0"
                    Command="{Binding AddNumberCommand}" CommandParameter="(">
                <TextBlock> ( </TextBlock>
            </Button>
            <Button Grid.Column="1" Grid.Row="0"
                    Command="{Binding AddNumberCommand}" CommandParameter=")">
                <TextBlock> ) </TextBlock>
            </Button>
            <Button Grid.Column="2" Grid.Row="0"
                    Command="{Binding AddOperationCommand}" CommandParameter="%">
                <TextBlock> % </TextBlock>
            </Button>
            <Button Grid.Column="3" Grid.Row="0"
                    Command="{Binding AddOperationCommand}" CommandParameter="^">
                <TextBlock> ^ </TextBlock>
            </Button>
            <Button Grid.Column="4" Grid.Row="0"
                    Command="{Binding AddOperationCommand}" CommandParameter="âˆš">
                <TextBlock> root </TextBlock>
            </Button>
            
            <Button Grid.Column="0" Grid.Row="1" HotKey="NumPad7"
                    Command="{Binding AddNumberCommand}" CommandParameter="7">
                <TextBlock>7</TextBlock>
            </Button>
            <Button Grid.Column="1" Grid.Row="1" HotKey="NumPad8"
                    Command="{Binding AddNumberCommand}" CommandParameter="8">
                <TextBlock>8</TextBlock>
            </Button>
            <Button Grid.Column="2" Grid.Row="1" HotKey="NumPad9"
                    Command="{Binding AddNumberCommand}" CommandParameter="9">
                <TextBlock>9</TextBlock>
            </Button>
            <Button Grid.Column="3" Grid.Row="1"
                    Command="{Binding AddOperationCommand}" CommandParameter="/">
                <TextBlock>/</TextBlock>
            </Button>
            <Button Grid.Column="4" Grid.Row="1"
                    Command="{Binding RemoveCharacterCommand}">
                <TextBlock>Delete</TextBlock>
            </Button>
            
            <Button Grid.Column="0" Grid.Row="2" HotKey="NumPad4"
                    Command="{Binding AddNumberCommand}" CommandParameter="4">
                <TextBlock>4</TextBlock>
            </Button>
            <Button Grid.Column="1" Grid.Row="2" HotKey="NumPad5"
                    Command="{Binding AddNumberCommand}" CommandParameter="5">
                <TextBlock>5</TextBlock>
            </Button>
            <Button Grid.Column="2" Grid.Row="2" HotKey="NumPad6"
                    Command="{Binding AddNumberCommand}" CommandParameter="6">
                <TextBlock>6</TextBlock>
            </Button>
            <Button Grid.Column="3" Grid.Row="2"
                    Command="{Binding AddOperationCommand}" CommandParameter="*">
                <TextBlock>*</TextBlock>
            </Button>
            <Button Grid.Column="4" Grid.Row="2"
                    CommandParameter="{Binding RemoveExpressionCommand}"
                    ><TextBlock>AC</TextBlock></Button>
            
            <Button Grid.Column="0" Grid.Row="3" HotKey="NumPad1"
                    Command="{Binding AddNumberCommand}" CommandParameter="1">
                <TextBlock>1</TextBlock>
            </Button>
            <Button Grid.Column="1" Grid.Row="3" HotKey="NumPad2"
                    Command="{Binding AddNumberCommand}" CommandParameter="2">
                <TextBlock>2</TextBlock>
            </Button>
            <Button Grid.Column="2" Grid.Row="3" HotKey="NumPad3"
                    Command="{Binding AddNumberCommand}" CommandParameter="3">
                <TextBlock>3</TextBlock>
            </Button>
            <Button Grid.Column="3" Grid.Row="3"
                    Command="{Binding AddOperationCommand}" CommandParameter="-">
                <TextBlock>-</TextBlock>
            </Button>
            <Button Grid.Column="4" Grid.Row="3" Grid.RowSpan="2">
                <TextBlock>=</TextBlock>
            </Button>
            
            <Button Grid.Column="0" Grid.Row="4" Grid.ColumnSpan="2" HotKey="NumPad0"
                    Command="{Binding AddNumberCommand}" CommandParameter="0">
                <TextBlock>0</TextBlock>
            </Button>
            <Button Grid.Column="2" Grid.Row="4"
                    Command="{Binding AddNumberCommand}" CommandParameter=".">
                <TextBlock>.</TextBlock>
            </Button>
            <Button Grid.Column="3" Grid.Row="4"
                    Command="{Binding AddOperationCommand}" CommandParameter="+">
                <TextBlock>+</TextBlock>
            </Button>
        </Grid>
    </Grid>

</Window>
